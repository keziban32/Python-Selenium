# Generated by Selenium IDE

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as exC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from webdriver_manager.chrome import ChromeDriverManager 
from constants import globalConstants as gC


class Test_order():
  def setup_method(self, method):
   self.driver = webdriver.Chrome(ChromeDriverManager().install())
   self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()

  def test_passwordrequired(self):

    self.driver.get(gC.URL)
    self.driver.maximize_window()
    usernameInput=self.driver.find_element(By.ID, gC.username)
    usernameInput.click()
    usernameInput.send_keys("standard_user")     
    passwordInput=self.driver.find_element(By.ID, gC.passw)
    passwordInput.click()
    passwordInput.send_keys("")  
    loginBtn=self.driver.find_element(By.ID,gC.l_button)
    loginBtn.click()
    assert self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"error\"]").text == gC.passw_mess

    
  def test_invalidlogin(self):

    self.driver.get(gC.URL)
    self.driver.maximize_window()
    usernameInput=self.driver.find_element(By.ID, gC.username)
    usernameInput.click()
    usernameInput.send_keys("Keziban") 
    WebDriverWait(self.driver, 2).until(exC.visibility_of_element_located((By.ID, gC.passw)))   
    passwordInput=self.driver.find_element(By.ID, gC.passw)
    passwordInput.click()
    passwordInput.send_keys("Sökmen")    
    WebDriverWait(self.driver, 2).until(exC.visibility_of_element_located((By.ID, gC.l_button)))
    loginBtn=self.driver.find_element(By.ID,gC.l_button)
    loginBtn.click()
    assert self.driver.find_element(By.XPATH,"/html/body/div/div/div[2]/div[1]/div/div/form/div[3]").text ==gC.user_passw_mess

  
  def test_validlogin(self):

    self.driver.get(gC.URL)
    self.driver.maximize_window()
    WebDriverWait(self.driver, 5).until(exC.visibility_of_element_located((By.ID,gC.username)))
    usernameInput=self.driver.find_element(By.ID,gC.username)
    usernameInput.click()
    usernameInput.send_keys("standard_user")
    WebDriverWait(self.driver, 5).until(exC.visibility_of_element_located((By.ID, gC.passw)))
    passwordInput=self.driver.find_element(By.ID, gC.passw)
    passwordInput.click()
    passwordInput.send_keys("secret_sauce")
    WebDriverWait(self.driver, 5).until(exC.visibility_of_element_located((By.ID, gC.l_button)))
    loginBtn=self.driver.find_element(By.ID, gC.l_button)
    loginBtn.click()

  def test_addcard(self):
    self.driver.get(gC.URL)
    self.driver.maximize_window()
    usernameInput=self.driver.find_element(By.ID, gC.username)
    usernameInput.click()
    usernameInput.send_keys("standard_user")
    passwordInput=self.driver.find_element(By.ID,gC.passw)
    passwordInput.click()
    passwordInput.send_keys("secret_sauce")
    loginBtn=self.driver.find_element(By.ID, gC.l_button)
    loginBtn.click()
    addCart= self.driver.find_element(By.ID,gC.backpack )
    addCart.click()
    addCart=self.driver.find_element(By.ID,gC.redTshirt)
    addCart.click()
    shopCart=self.driver.find_element(By.CSS_SELECTOR,gC.shopCart)
    shopCart.click()
    checkout=self.driver.find_element(By.ID, "checkout")
    checkout.click()
    fNameInput=self.driver.find_element(By.ID,gC.fName)
    fNameInput.click()
    fNameInput.send_keys("keziban")
    lNameInput=self.driver.find_element(By.ID,gC.lName)
    lNameInput.click()
    lNameInput.send_keys("sökmen")
    pCodeInput=self.driver.find_element(By.ID,gC.pCode)
    pCodeInput.click()
    pCodeInput.send_keys("10100")
    tocontinue=self.driver.find_element(By.ID, "continue")
    tocontinue.click()
    finish=self.driver.find_element(By.ID, "finish")
    finish.click()
    assert self.driver.find_element(By.XPATH, "//body/div/div/div/div[2]/div").text == gC.delivery_mess
    backProducts=self.driver.find_element(By.ID, "back-to-products")
    backProducts.click()
  
